import Head from 'next/head';
import { Inter } from 'next/font/google';
import { ApolloClient, InMemoryCache, gql } from '@apollo/client';

import Image from 'next/image';
import Header from '@components/Header/Header';
import Container from '@components/Container/Container';
import Button from '@components/Button/Button';

import styles from '@styles/Home.module.scss';

const inter = Inter({ subsets: ['latin'] });

export default function Home({ products }) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='preconnect' href='https://app.snipcart.com' />
        <link rel='preconnect' href='https://cdn.snipcart.com' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Header />
      <main className={`${styles.main} ${inter.className}`}>
        <Container>
          <h1>Hyper Bros. Trading Cards</h1>
          <h2>Available Cards</h2>
          <ul className={styles.products}>
            {products.map((product) => {
              const { featuredImage } = product;
              return (
                <li key={product.id}>
                  <Image
                    width={featuredImage.mediaDetails.width}
                    height={featuredImage.mediaDetails.height}
                    layout='intrinsic'
                    src={product.featuredImage.sourceUrl}
                    alt={featuredImage.altText}
                    className={styles.productImage}
                  />
                  <h3 className={styles.productTitle}>{product.title}</h3>
                  <p className={styles.productPrice}>${product.productPrice}</p>
                  <Button>Add to Cart</Button>
                </li>
              );
            })}
          </ul>
        </Container>
      </main>
      <footer className={styles.footer}>
        &copy; My Store, {new Date().getFullYear()}
      </footer>
    </>
  );
}

export async function getStaticProps() {
  const client = new ApolloClient({
    uri: 'https://new.page.co.ua/graphql/',
    cache: new InMemoryCache(),
  });

  const response = await client.query({
    query: gql`
      query AllProducts {
        products {
          edges {
            node {
              id
              content
              title
              uri
              product {
                productPrice
                productId
              }
              slug
              featuredImage {
                node {
                  altText
                  sourceUrl
                  mediaDetails {
                    height
                    width
                  }
                }
              }
            }
          }
        }
      }
    `,
  });

  const products = response.data.products.edges.map(({ node }) => {
    const data = {
      ...node,
      ...node.product,
      featuredImage: {
        ...node.featuredImage.node,
      },
    };
    return data;
  });

  console.log(products);

  return {
    props: {
      products,
    },
  };
}
